<!DOCTYPE html>
<html>
	<head>
		<meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />
		<title></title>
		<link href="../../../files/_css/theme000.css" rel="stylesheet" type="text/css" />
		<script src="../../../files/_js/jquery.min.js">
</script><script src="../../../files/_js/jqpublish_crossReferences.js">
</script>
	</head>
	<body>
		<h2>
			Object-Oriented Analysis Method</h2>
		<p>
			key words: object, class, attribute, behaviour, inheritance, heredity</p>
		<p>
			<strong>1. Introduction</strong></p>
		<p>
			The object-oriented analysis (OOA面向对象) was originally an unimportant method appeared as terms of &#39;object&#39; and &#39;oriented&#39; in artificial intelligence engineering areas during late 1950&#39;s. It suddenly became a world-wilde known terminology during 1990&#39;s due to that it was successfully applied into software programming to break the limitations of&nbsp; human brain&#39;s handling capacity of the amount of complicated large procedural Lines-Of-Codes (LOC). It could be said that today&#39;s software industries would probably still stayed back at a level of DOS command line without OOA. Today OOA became more theory than method and began to expand its application from computer science into other areas, like philosophy, liguishtic, biology etc. This paper will briefly introduce its critical concepts related to the TBI study.</p>
		<p>
			The successful application of OOA in software industry is a strong evidence that the theory of form not only correctly reflects the intrinsic nature&nbsp;of our universal but also is verifiable and practical applicable in our science study.&nbsp; If we apply OOA into biology to explore the variation among same species and similarities among different species, the answer could be simple and clear and the long time lengthy arguments can be avoided.</p>
		<p>
			<strong>2. Object vs Class </strong></p>
		<p>
			The concepts of &#39;object&#39; and &#39;class&#39; in OOA are essentially the same as the &#39;matter&#39; and &#39;form&#39; discussed in Plato&#39;s Theory of Form, or the &#39;wares&#39; and &#39;words&#39; mentioned in Chinese classic philosophy book, where &#39;wares&#39; are those under the &#39;form&#39; and &#39;words&#39; are those above the &#39;forms&#39; (易经&bull;系辞: &ldquo;形而上者谓之道，形而下者谓之器&rdquo;). The issues like, Where do the objects come from? How the object become the being, existence, or reality? Which basic categories do objects belong to? etc, can be further studied in the ontology(本体论) or in more broaden areas in metaphysics.</p>
		<p>
			In plain English, &#39;object&#39; means a material thing that can be seen and touched. In object-oriented programming languages, an object can be considered as chunk of machineary bits that possess properites and behavours and can be accessable and executable at runtime in cache memory.&nbsp; Accordingly, a class, can be considered as a defined template that exists in forms of high level software programing languages at design time, through which the object can be created. Here we can see that there are two&nbsp;seperated different realms in OOA: the design time and run time space.</p>
		<ol type="A">
			<li>
				<p>
					) <strong>The Design Time Space: </strong></p>
				<ol>
					<li>
						This is the&nbsp;place where the classes are located, usually&nbsp;in a permant storage, typically in hard drive.</li>
					<li>
						Once finished, all classes in this world, along with their relationship, will never change and will live forever.(Eternal)</li>
					<li>
						Each class&nbsp;has its own universal unique name and private space and behavours to identy itself to others rather than to be something shameful (Encapulation).</li>
					<li>
						Each unique behavior(or method, or interface) could be generic to all of those classes that is appliable to. (Polymorephism)</li>
					<li>
						Each class has protected safe guarded&nbsp;properties and behavors to only allow children class&nbsp;to derive, as well as&nbsp;open data&nbsp;and&nbsp;methods&nbsp;to allow to share for public&nbsp;(Inheritance)</li>
					<li>
						In good OO system, all classes are well organized in one systemetically interconnented hiearchy network with one top level of root class.</li>
					<li>
						Each class has parents-children, or aggregation relationship with others classes, but never changes.(Eternal)</li>
				</ol>
			</li>
			<li>
				<p>
					) <strong>The Run Time Space:&nbsp;</strong></p>
				<ol>
					<li>
						This is the&nbsp;place where the complied and created objects&nbsp;are located, typically in CPU cache memory.&nbsp;</li>
					<li>
						All objects in this world&nbsp;always have its own life cylce of born, growth (changes, works) and dead.&nbsp;&nbsp;</li>
					<li>
						Each individual object has its own space, status and behaves relatively independently. (Encalpulation)</li>
					<li>
						Each individual object treat other appliable objects equally without discremination. (Polymorphism)</li>
					<li>
						Each individual object are safely procted through encapulation mechenism. Only the public opened properties and behavors are permitted to be accessed or executed by any other objects. the protected properties/behavours are only permitted to accessed or executed by objects of children classes. (Inheritance)</li>
					<li>
						There exists possibly dynamically complicated interactive relationship among all object&nbsp;in this world but they have equal right.</li>
					<li>
						An object can be unlimited populated directly&nbsp;through its class initiation, or dynamically&nbsp;produced or copied by others, or self cloned. No matter how they are populated, all objects generated from the same image of class always belong to one same type. An object generated from different classes, no matter how similar they are in propties or behavours, they always belong to the different types. (Strong Type, Casting)</li>
				</ol>
			</li>
		</ol>
		<p>
			The demonstrated two realms in OOA can be considered as the physical model reflecting the philosophy thoughts of Theory of forms that the existence of a level of reality or &#39;world&#39; is inhabited by the ideal or archetypal forms of all things. The run time space simulates the world where we live in and can see and touch; whereas the design time space simulates another kingdom of world that we can not see and enter, but we can percieve it through our soul and could have participated the eternal world prior to being incarnate in a tangible body, and retain a memory of them. Although this memory is not readily accessible to the conscious mind, its presence is sufficient, to enable our limited perceptions.</p>
		<p>
			&nbsp;</p>
		<p>
			<strong>3. Inheritance vs Heredity</strong></p>
		<p>
			Literally, heredity is same as inheritance except that inheritance has preferences on legitimation, heredity has preferences on genes. We introduce the concept of heredity in order to better understand the inheritance in OOA.</p>
		<p>
			In OOA, inheritance means the children class can derive all&nbsp; protected and public legal properties or methods from its parents classes. Inheritance is a concept defined in design time space for the class level.</p>
		<p>
			To distinguish inheritance in OOA, the heredity is defined as the predefined properties values (states, traits etc), that is either enumerated or in certain range, can be passed from one object to another (offspring) during the object reproduction process under the permission of class inheritance. Heredity happens in run time space.</p>
		<p>
			In biology, there shouldn&#39;t have parents-children relationship among same species. What we called parents-children relationship among human in our daily life indeed is a producer-producee relationship. Mendal&#39;s&nbsp;discovery&nbsp;is about the visible properites heredity pattern&nbsp;existing among&nbsp;same&nbsp;species from one generation to another. &nbsp;</p>
		<p>
			No two objects of the same species is exactly the same in world, even the twins. The differences of the same species are the results of changes of values of its properites that is either static one time change during the its reproduction heredity process or dynamitcally in living state at run time space. Such changed values are either enumerated or within certain range. The most differences among the same species are the genders between male and female. No matter how different they are, the differences are limited and changeable during life time.</p>
		<p>
			The existance of similarities between different species are the results of the inheritance at the design time space. The similities due to heredity may come and go among generations. Whereas the similities due to inheritance never change. Since inheretance is eternal in design time space. and so does the species never change.</p>
		<p>
			The differences between human and apes are not due to the heredity through accumulated mutations for long time of generation by generation; Neither their similarities are the results due to heredity from the same ancistor or species. Their similarities, due to its inheritance in design time space, since it appeared in the world, has never been found changed until today, and will never ever change in future. The coexistance of apes and human for both today and its fossils in history is one of the evidences of such theory. On the other hands, the solid facts that so far we could not find any suttle essential differences or trend between the people of today and those about five thousands years ago is another evidences that for any specific trait (like, the lengths of bones, or ratios of its length) it could not be arbitarly randomly unlimited accumulated out of its internally determined ranges.<br />
			<br />
			&nbsp;</p>
		<p>
			<strong>4. Encapulation</strong></p>
		<p>
			In programming languages, encapsulation is used to refer to one of two related but distinct notions, and sometimes to the combination thereof: A language mechanism for restricting access to some of the object&#39;s components.</p>
		<p>
			Similarly, in TBI, encapsulation is used to refer to two or more root characters to be combined to form a new compound word. The significant role for encapsulation is that each individual root character in compound word keep independant both in writing and meaning, and contribute to the new meaning for its compound character.</p>
		<p>
			&nbsp;</p>
		<p>
			<strong>5. Polymorphism</strong></p>
		<p>
			In OOP languages and type theory, polymorphism is the provision of a single interface to entities of different types. There are two cases for polymorphism in TBI.&nbsp;</p>
		<ol>
			<li>
				the provision of a single character to refer to multiple different meanings.<br />
				<br />
				In this case, polymorphism is very similar to the concept of polysemy in western language study -- it is the capacity for a sign (e.g., a word, phrase, etc.) or signs to have multiple related meanings (sememes). Charles Fillmore and Beryl Atkins&rsquo; definition stipulates three elements: (i) the various senses of a polysemous word have a central origin, (ii) the links between these senses form a network, and (iii) understanding the &lsquo;inner&rsquo; one contributes to understanding of the &lsquo;outer&rsquo; one.<br />
				<br />
				Example, &#39;one&#39;, could also means,<br />
				- first, or beginning of all,<br />
				- boundary between up and down,<br />
				- boundary between heaven and earth,<br />
				<br />
				Example, a &#39;mouth&#39; could also mean a &#39;manger&#39;.<br />
				<br />
				&nbsp;</li>
			<li>
				the provision of multiple characters to refer to the same meaning.<br />
				<br />
				This case can also be considered as variant inheritance. Example, &#39;son&#39;,</li>
		</ol>
		<p>
			<br />
			The polymorphism in TBI requiree significant visual thinking <a href="./2.06_0030-methodolgy_visualThinking.htm">(See visual thinking theory)&nbsp;</a> psychologic activites. It is the polymorphism that made each character to be intelligent, unique and unchangeble due to that the mulitple meaning had to be met. For example, the horizontal line that is used to denote &#39;one&#39; could not be modified to veritcal line. Since it will lost the meaning of boundary of heaven and earth.<br />
			<br />
			The polymorphism analysis, fiinding out the multiple different characters (combined or root) to denote one same meaning, hand for example <a href="./4.___00_Tbl-InterchangableHandBtwCrossAndAnimal.htm">(*)</a>, help us to recongnize the abstract meaning of ideogram&nbsp; from the pictorgrams that the meaning is obvious and visible.</p>
		<p>
			<strong>6. Conclusion</strong></p>
		<p>
			Literally, the verb &#39;Orient&#39; means to direct or position toward a particular object. Simply speaking, OOA is&nbsp;an approach to directly position toward on the objects in existing real world.&nbsp; OOA method transforms the long time discussed and humane concerned philosophy, like, life relativity, natural ontology and spiritual transcend, etc, into mordern scientific physical modeling and allow to be simply simulated through computer&#39;s sofware object-oriented design and programming (OOD, OOP) without the labs. Although it only helped us to solve complicated problems, like the issues of similarities and variations in classification existed in biology or TBI study, its philosophy thoughts is universal.<br />
			<br />
			The ecapsulation in OOA allow us to identify and extract out about 500 characters as root from total complicated about 6000 characters. The inheretance (not heredity) analysis further help us to extract out about 300&nbsp; ideograms from all 500 root characters, as wellas the meaming not only from itself but also from its parents.<br />
			<br />
			It is the Encapsulation, Polymorphism and Inheritance that make chinese characters different from any other languages in the world. <a href="./2.___00_Tbl_Chinese_Characters_Unique_Features.htm">(*)</a></p>
		<p>
			&nbsp;</p>
		<p>
			&nbsp;</p>
		<p>
			End</p>
	</body>
</html>